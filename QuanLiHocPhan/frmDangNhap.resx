<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>