<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAPBQTFRF////
        3iIZ3QAA3zMs3ywl8bW08rq44lhU41xY53983h8V9tHQ5GJe3A0A3RkM76yq+uXk53Nw/vr67+8A++zr
        3ygg7qak/fT08vME3hsQ9MfG/PHwuJsN4Ds16Ht465OR7Z2b88HA41JO6YaD+N7d99bV4UM+6o2Ls5MN
        5WhkvqUN7qKh4ktG6oqI1soAwasA2s2e5eEI/f3m8u7Y39gJ5m5r39Or+/yv+PmZv6ZIzbt49fWA/f3s
        1McL5t2/8/Nl8fFG+vrIyLYN8/DWz75h6ODKyLNmw61R3dNn/f3pvqU3+fm78+7gtpgczbqByyIeR6W8
        3wAADPtJREFUeF7tnQt74sYVQMVgXoKRedk8DBgMtvH6sdldO9lssunGbdM23bb//9/0zszVExmjuYOE
        /Ol8TlaSAXOY953RYE3Lb5sr68guvWXssnWEh28VZcjZ24S7hnxZrbxFqktQlIasar1NquytG1YKw9xT
        GOafwjD/FIb5pzDMP4Vh/ikM809hmH8Kw/xzGIaryrJ1dcIZs6e12XzRx8tGyN7wrHIjYn7OSESlbXvE
        QbS0bOJv6WRtWLlgzBFB2xA2Z/YpPoJKpob9JWMjlIpiM17Bh9HI0LDfkfHoF7FZrYsPpZCZYbcRkzsj
        cNtAnZOVYWV7+iEjRlfMxvDsgu02nzdyyBk1E8NFMIOO3EkvzmOsnTt8jjZZGDbgbyqgVWAX98fj5uVl
        c3E6O2GbkuwWn6VLyobdgWVduIKcHZ1f4i8U/dPyRvPBzvCXmqRr2G5aZyeqioHkW67wcpDmXaSIOjf4
        G01SNVxUrTaXaQTt+Yt9lnEpXM2yNv5CjzQNz4+ttkogzo/xWix+QRXwGV7WI0XDm1sUdNg5XnqJRSin
        MlKLkZ7h3bnVF28cOmOvN+OroCLtraVmWJ5ZXRvKoLPbH5IfBuI84UUtUjLsntQtawrtPKvvmOXaflm0
        GV7TIh3DgT21rDqH97r7qG/hK5Jq01QMBzbvWktWckZxLeBLNLxGgy3wkg5pGA5KvC3+ELtIVimW3KLI
        KT23FAy7Zd6EyrHEGnhhV8ZuPuVLvKJDCoZTaP663GZbG/lYLrCP6rTwgg77N6yxGrxXzsZ4noBLTMTR
        FV7QYe+GM2ZDf42xJHWMx51KRLuE5zrs23Au3JpMs74Xq+4ElAZxz4YLJoof1w63uIaEnul+DVeMw+ju
        Rj+eNFNtIoOBsy57NezyERTCBaFLgh2bg03DK4ddWl1Kn6uLhgeahjMuBoJP4VBMQq5kbXqgaXjMRtDf
        btJeV6zSPlRD0U+D/KnR0AcR769kczzTYW+GXcdmczwmILs19gme6bA3wzoXeZTMmTA8yF7brcqjdKRh
        HU902JMhFEJ+jcc0xC1ZTgdPdNiToQ3gIRExguKvRR+3sR/DJ17SGS3F8STCV8mHlj57MYQhgUMpOkFE
        z5T0ae3DcACvaWDyViGafFKdtQ/DC8dUNQNIQzzWYg+Gx4wYww0BhnYZj7UwbyjaaFLVEKbBDy6qX3No
        vawIHcjypN6fcUMRWiHFqCPcOMSGx7Rhl9klIx1SF2jxafWyaUNy8xWlbJPGTsYNxWDHaBJCz5u4VMGw
        4RR6kUaTsAtdeNqKGrOGp/BqtNYrShtGYbTVtEYNZWTMUIFGmmCIh5oYNRTVjD3CEzNU2OgCDzUxaQjD
        XngdU6uXFXNOa+/NGsrpPnM9UsmTCCqTMGgop2xJ07UxlMmdeIOGcpMbM+EnH0brdgPmDGHQBK09sVqI
        smKMumLfnKFc/Gqyzy2oMMqkjMSY4VwkocGRr6LBD2cVtBAs8Xs8o/F3/BcqGnrjY8rwHBp7eBGt9QhR
        Pv2IB9aA0SNahgzVTKahLunDdzyABoicSU0ZzmUSEkcByE/vvdnCcwMBH0OGajWomSBpb40HlnVHrklN
        GYpRE3ESzOPzw894BHmfstwLMWNoyyQ0k0mH77/gERRDA4NpI4bumhATPbZfeusf8NBammhejRiq5Wf2
        EZ5S+HX4df0bHlvUgZPEhCEuyTYyV/GX4bu121isOL2eMWN4L5sKIxGoj70Pa68qnVOHFRIThioJjYx9
        vw2fJxM8thwjIzEDhljPjGp4TuD33nAycRuLtplJVgOGLXW7pIm2ojd8XE/cxuLazGCaboiL60rUeArw
        U09kUrexoCxPCEA3FK8gDfGcQK/XW08m2FgQb6z0oBvWVSYdEUYBHxWfez3IpOvfPn36K/x0B+1YkrYg
        ZEM3k7qD32qtJajX6/D/m6fO9a3biDzJX0S5sKzfnntDSD5g+H79/sOwNxz2vv7NquId0BGSxm3Ihu7t
        Se7zT5kTQmzkoUrUlOOlECJz/7l+Bi/B5HEIeg/v1zDMD9z4FCDx+yQbuncnuZ3SUzwPwo5EoVKLYaMI
        w0+QN0XaQSIOe4/v1+s/xCsdiqEjhxXqnQriDNXGAS8bWn9MJpP1BAwfn9deXXMghu5tgl57j4aYB1G/
        xMXth5hLlaitTmQutb6v1+8eIAEfwXP9Dxzie+VQPr6EJ6mXQxkHBrxovjJ0ZkDnqTV1t79gTasDdc/N
        DdQtQtG+ghNR06hP5p8foPw9QiF8fPbCUP1xcyx+LtXgs9kcw894nDSOQDW8wf0fvJvPlaGbZ63uufoI
        Agso5bLfcFL8Korg4/odFMUhXgogdx/yXjEpVENMQn9gETF0U9l28FROesIDQiGmb1Jwsv4ApngpgMzr
        WRnKKUOBN77fMHRvKPBa6k3D35XgZPIMiYjXAsgYSVaGbjH038CmIQaLvX70pqErOFnHpqG8lzQrQ7G+
        VeBHMDYNVSx1i+FnJbiGNuNheGiG7m4r/l2em4Yz+Sn4sdSo4b96wwcQ/PO79YOoa/BqgCwN++LNCvyp
        3w1DsZ42dCVq+E0K/mhBQf0CdQ1eDZClodft8KNiUcOuqmgCEYCI4b9BcC1GvS2ojn9+jmktsjRUlYj4
        +17zhoaDPtBejc+5KqmB9i9iCIKQQYGOWBr0nwNLw7rb1fTjbMrQ62NhQQ3emxA2/AXjo9Dn4aDY/Sqv
        hlALBPAkMTRD8V4lfggDDSMEQxwhw49f/yv/HZyKtbJCUZ6GyNDQq2gCbUGcoR2a3g8ZfsHw7+lcGMav
        YTvJztDb9CCwXdWmocNOQlPDkXKocGQaxitKQ+1FpiRD38a/BTJSDoF65JXjDKsMDeOWy2ZoGNh9BK+4
        hkyMc2Dsc7naDBzFGYrlcMowZhG8LIfZGLr7VsQY4lkcMYZzsfXXi4YZlkN/hzyaIdRY2wyzaw/dQCJA
        M7wbHahhYCsnkuEtXDhMQ/lWFRRDOYo+TEN35xEg2lokMZQCh2noDfDh2ZEWP4FhTT7hMA3V4F0S7bXt
        bnivPqbDNLwOGHqdrYSGXrz1IA39Lk3g2TsagpHA385ri2F28VLcHkfgT3HfMg5sN7Rt3HzP3eoK/nwF
        xoejEecxN7m/+opbMWXo7cXWXM7n89ttS32aYv5NGuJupoDY66pzclWfNWLmtufz4+Nz7TlvQ4ZaK9h9
        QePrwwMYMtQpJgFBx8BKlZegGKrdcRR+c7ErwU1Yqfs9b4Ni6EXagMRPvwwK+h0c81AMbwOGSe8GGgcE
        xfTp/qAYBvqlse3YFgIdvpJN3zt/GxRD2XS7JCqIOG2qMHMLw4tQDOUORy5JlrU9hQT311BIKIaBKAbk
        tZ3vteheBcpvycR2WVshGbqT+JJdV+6tcCZDwQzfr7gJyVD1spEdN3OqBCpR+Ku0HeV3gWQYCNQAOzXb
        4S3zUxCkGapYrcsOO/wPrsKCe8+iAM0wMMoHXm0wxuGvB9p7JSOhGQYipsBrS0zvQ0XQTrx+Sw+aoXsj
        ArL1dsj+NPxxGFg1vRNEQ7EdTYAt3ZPT8BfI8PIehxMhiIaRJZK288Ia5f5d6HElRtknMBlUw0j1PyrH
        9qLn4QQcpVQEJWRDqxVSdI5iJgyPIgk4NXIn5o7QDa1OOBWj89Tteris2szYbnU7QTaEXHkc+pY4mzUC
        ObXfiXxFHjva72BpA7JhH97woBH6IkrOrtFiFfV7/WuCjEPPpU0xMOwe13FdAsBbc2k4rkX8bHaRZglU
        GCiHzf+pBVHtcbVSqY4vlcTlNY9+hRqz9zzYjcWAIYz4SrehLunZYjna+Bo8nk43dAMThtagDOXw5vy4
        ulhUTu9btreczccJ1T9pYsTQsq6Z46hvauTcu8nCh7NO+gUQMWRora7CrV4Am7NZZn7mDKGHWo7UnBLx
        3cXzFzqr6WDOECrVTrgA2g4UT4PfP62HSUNgcT2VpVFy1DlOuf8Sh2FDQf9SLNtrJp6M2hN7MDwwCsN4
        zjoNLWaz2XIu+3iXp41WbQNx7/DL4IMuks026hm2xeoIXRg7b07l+go9Eg5P9Az7d/h5JucOWhDokzM2
        rdX1qKWRhiRWLcZTDNToGQ4quoxFELFxDd2AJl5JTrJAq2Y5xDZdh5bso87xTIc0ymF40ikZjghVhePf
        yUj4jSXpG5ZsBoMtPNYhB4ZOcN1mcgrDCIVhPJS61JGGMDLWJlnMXM+w2xa3iAY4EwxcuuI/AT48QL9a
        Y9y6Z0e3q83fyueIJ3vI18W/4ZEsZKBnSGLMrUYaE/hIBobWmPqVgYnIwjBdCsP8Uxjmn8Iw/xSG+acw
        zD+FYf4pDPNPYZh/CsP8Uxjmn8Iw/xSG+acwzD+FYf4pDPNPYZh/CsP8I/aYkYZ8WcWlf2+LqtjrSRqW
        CAtcDhqxOEkZvmXA8KV7lt4GdtkqH71pjqb/B0Xb+POiO361AAAAAElFTkSuQmCC
</value>
  </data>
</root>